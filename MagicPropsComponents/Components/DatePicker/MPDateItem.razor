@using MagicPropsComponents.Abstractions
<td class="@(CalculateCssClassesForDate())" @onclick="ChangeSelectDate">
    <span class="datedesc @(ShowingDate == DateTime.Today? "date-today-content": "")">@ShowingDate.Day</span>
</td>

@code {
    [CascadingParameter(Name = "MPDatePicker")]
    public IMPDatePicker? DatePicker { get; set; }
    private DateTime? _selectedDate = default;
    [Parameter]
    public DateTime? SelectedDate { get { return _selectedDate; } set { _selectedDate = value; } }
    [Parameter]
    public DateTime ShowingDate { get; set; }
    [Parameter]
    public int ShowingYear { get; set; }
    [Parameter]
    public int ShowingMonth { get; set; }
    [Parameter]
    public EventCallback<DateTime> SelectedDateChanging { get; set; }

    private string CalculateCssClassesForDate()
    {
        string cssClass = "";
        cssClass = ShowingDate.Year == ShowingYear && ShowingDate.Month == ShowingMonth ? "" : "datenotinthismonth";

        if (_selectedDate != null)
            cssClass += ShowingDate == _selectedDate.Value.Date ? " date-selected" : "";
        if (DatePicker != null)
        {
            if (ShowingDate > DatePicker!.Maximum || ShowingDate < DatePicker!.Minimum)
            {
                cssClass += " date-disabled";
            }
        }
        return cssClass;
    }
    private void ChangeSelectDate()
    {
        if (DatePicker != null)
        {
            if (ShowingDate > DatePicker!.Maximum || ShowingDate < DatePicker!.Minimum)
            {
                return;
            }
        }
        SelectedDateChanging.InvokeAsync(ShowingDate);
        _selectedDate = ShowingDate;
    }
}
