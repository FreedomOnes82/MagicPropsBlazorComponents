@page "/inputdemo"
@using MagicPropsComponents.ViewModels.Input
@using System.ComponentModel.DataAnnotations;
@rendermode @(new InteractiveServerRenderMode(prerender:false) )
<head>
    <style>
        .my-custom-margin-bottom {
                margin-bottom: 5px;
            }
        .my-custom-display-div{
            display:flex;
            align-items:center;
        }
    </style>
    
</head>

<h3>Input Demo</h3>
<hr />
<div class="container">
    <div class="row my-custom-margin-bottom d-flex align-items-center">
        <div class="col-sm-2">
            <label for="txtfirstname">First Name: </label>
        </div>
        <div class="col-sm-10 my-custom-display-div">
            <MagicPropsComponents.Components.Input.MPInput Clearable="false"  AutoFocus="true" InputID="txtfirstname"
             Placeholder="John"  @bind-Value="_firstNameValue" />
        </div>
    </div
     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <div class="col-sm-2">
            <label>Middle Name: </label>
        </div>
        <div class="col-sm-10 my-custom-display-div">
           <MagicPropsComponents.Components.Input.MPInput Clearable="false"  Width="110" Placeholder="M"  />
       </div>
    </div>
     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <div class="col-sm-2">
            <label>Last Name: </label>
        </div>
        <div class="col-sm-10 my-custom-display-div">
           <MagicPropsComponents.Components.Input.MPInput Clearable="false" 
             Title="Last Name"/>
       </div>
    </div>
     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <div class="col-sm-2">
            <label>Email: </label>
        </div>
        <div class="col-sm-10 my-custom-display-div">
           <MagicPropsComponents.Components.Input.MPInput Clearable="true"   FixedTitle="false"
                                      Width="350" Placeholder="example@group.com" 
                                      Title="Email" />
        </div>
    </div>
     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <div class="col-sm-2">
            <label>Number: </label>
        </div>
        <div class="col-sm-10 my-custom-display-div">
           <MagicPropsComponents.Components.Input.MPInput  FixedTitle="false" InputType="InputType.Number"
                                      Placeholder="0" Title="Number" />
        </div>
    </div>
     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <div class="col-sm-2">
            <label>Password: </label>
        </div>
        <div class="col-sm-10 my-custom-display-div">
           <MagicPropsComponents.Components.Input.MPInput  FixedTitle="false" InputType="@(_showPwd ? InputType.Text : InputType.Password)" InputID="txtPassword"
                                     >
                <RightAppend>
                    <i id="btnShowPwd" class="@(_showPwd ? "fa fa-eye" : "fa fa-eye-slash")" @onclick="ToggleShowPwd"></i>
                </RightAppend>
           </MagicPropsComponents.Components.Input.MPInput>
        </div>
    </div>
   
    <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <MagicPropsComponents.Components.Input.MPInput Width="500" Clearable="true"  Title="Search Sample" 
                                               Placeholder="Search"  ValueChanged="@ChangeSearchValue" >
            <LeftAppend>
                <i class="fa fa-search" @onclick="SearchFunciton"></i>
            </LeftAppend>
        </MagicPropsComponents.Components.Input.MPInput>
        <span style="color:palevioletred">@_searchAlert</span>
    </div>
     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <MagicPropsComponents.Components.Input.MPInput Width="500"  Clearable="true"  FixedTitle="true" Title="Description">
        </MagicPropsComponents.Components.Input.MPInput>
    </div>
    <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <MagicPropsComponents.Components.Input.MPInput Width="800"  Title="Sample show up more icons" >
            <RightAppend>
                <i class="fa fa-plus"></i> <i class="fa fa-edit ms-2"></i>
            </RightAppend>
        </MagicPropsComponents.Components.Input.MPInput>
    </div>
    <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <MagicPropsComponents.Components.Input.MPInput Width="800"   Title="Sample for Onfous and Onblur"  OnBlur="OnBlurFuncion" OnFocus="OnFocusFuncion" Placeholder="Sample for Onfous and Onblur">
        </MagicPropsComponents.Components.Input.MPInput>
        <span style="color:palevioletred">@_triggerAlert</span>
    </div>

     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <MagicPropsComponents.Components.Input.MPInput Width="800"  Title="Sample for Readonly"  Readonly
              Value="Value for Readonly textbox">
        </MagicPropsComponents.Components.Input.MPInput>
    </div>

     <div class="row  my-custom-margin-bottom d-flex align-items-center">
        <MagicPropsComponents.Components.Input.MPInput Width="800"  Title="Sample for Disabled"  Disabled>
        </MagicPropsComponents.Components.Input.MPInput>
    </div>
</div>
<hr />
<h4>Validation with Blazor EditForm</h4>
@* use blazor EditForm: Should declare ValidationFieldName(it can be omitted when same as Title), then mpinput will catch correct invalid field.*@
<EditForm Model="user" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInValidSubmit">
    <DataAnnotationsValidator />
    <MagicPropsComponents.Components.Input.MPInput Title="Email" ValidationFieldName="Account" @bind-Value="@user.Account"  />
    <ValidationMessage For="@(() => user.Account)" />
    <MagicPropsComponents.Components.Input.MPInput Title="Password" @bind-Value="@user.Password"  />
    <ValidationMessage For="@(() => user.Password)" />
    <button class="btn btn-primary mt-2" type="submit">Submit</button>
</EditForm>

@if (_status != null)
{
    <span style="@(_status==true?"color:green;":"color:red;")">@(_status == true ? "Submit!!" : "Failed!!")</span>
}
<hr/>

@code {
    private string _firstNameValue = "John";
    private string _value1 = "aaa@a.com";
    private string _searchAlert = String.Empty;
    private string _triggerAlert = String.Empty;
    private bool _valueShowError = true;
    private bool _value2Required = false;
    private bool _showPwd = false;

    private void ToggleShowPwd()
    {
        _showPwd = !_showPwd;  
    }

    private void SearchFunciton()
    {
        _searchAlert = "Click the Search Button Here to Initiate Advanced Search Functionality in Practical Applications";
    }
    private void ChangeSearchValue()
    {
         _searchAlert = String.Empty;
    }

    private void OnFocusFuncion()
    {
        _triggerAlert = "Focus on the input 'Sample for Onfous and Onblur'";
        StateHasChanged();
    }
    private void OnBlurFuncion()
    {
       _triggerAlert = String.Empty;
        StateHasChanged();
    }

    private RegisterClass user = new RegisterClass();
    private bool? _status = null;
    private void HandleValidSubmit()
    {
        _status = true;
    }
    private void HandleInValidSubmit()
    {
        _status = false;
    }
    private class RegisterClass
    {
        [Required(ErrorMessage = "Email is required.")]
        [RegularExpression(@"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$", ErrorMessage = "Please enter valid email.")]
        public string Account { get; set; } = string.Empty;

        [Required(ErrorMessage = "Password is required.")]
        [RegularExpression(@"^[A-Za-z0-9_]{8,30}$", ErrorMessage = "The password should consist of a combination of numbers, letters, and underscores, with a length ranging from 8 to 30 characters.")]
        public string Password { get; set; } = string.Empty;
    }

}
